{
	"trtc": {
		"prefix": "trtc",
		"body": [
		  "#include<bits/stdc++.h>",
		  "",
		  "#define faf() ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr)",
		  "#define ll long long",
		  "#define all(x) x.begin(), x.end()",
		  "#define int long long",
		  "",
		  "using namespace std;",
		  "",
		  "const int N = 2e5+7, M = 1e9+7;",
		  "vector<bool>is_prime(N, true);",
		  "vector<int>prime;",
		  "",
		  "int big_mod(int x, int y, int m)",
		  "{",
		  "    int ans = 1;",
		  "    while(y)",
		  "    {",
		  "        if(y&1) ans = (ans * x) % m;",
		  "        x = (x*x)%m;",
		  "        y>>=1;",
		  "    }",
		  "    return ans;",
		  "}",
		  "",
		  "void sieve()",
		  "{",
		  "    is_prime[0] = is_prime[1] = false;",
		  "    for(int i = 2; i*i<N; i++)",
		  "    {",
		  "        if(is_prime[i])",
		  "        {",
		  "            for(int j = i*i; j<N; j+=i)",
		  "            {",
		  "                is_prime[j] = false;",
		  "            }",
		  "        }",
		  "    }",
		  "    prime.push_back(2);",
		  "    for(int i = 3; i<=N; i+=2)",
		  "    {",
		  "        if(is_prime[i])",
		  "            prime.push_back(i);",
		  "    }",
		  "}",
		  "",
		  "void factorize(int n, map<int,int>&m, int p)",
		  "{",
		  "    for(int i = 0; i<prime.size(); i++)",
		  "    {",
		  "        while(n!=1 && n%prime[i] == 0)",
		  "        {",
		  "            m[prime[i]] += p;",
		  "            n/=prime[i];",
		  "        }",
		  "        if(n == 1) break;",
		  "    }",
		  "    if(n!=1) m[n] += p;",
		  "}",
		  "",
		  "int sum_of_divisors(int n, int p)",
		  "{",
		  "    map<int,int>m;",
		  "    factorize(n, m, p);",
		  "    int ans = 1;",
		  "    for(auto i : m)",
		  "    {",
		  "        int x = big_mod(i.first, i.second+1, M) - 1 + M;",
		  "        x = (x%M);",
		  "        int y = big_mod(i.first - 1, M-2, M);",
		  "        x = (x*y) % M;",
		  "        ans = (ans*x) % M;",
		  "    }",
		  "    return ans;",
		  "}",
		  "",
		  "int main()",
		  "{",
		  "    faf();",
		  "    sieve();",
		  "    int t = 1, tc = 1;",
		  "    cin>>t;",
		  "    while(t--)",
		  "    {",
		  "      	$1",
		  "        // cout << \"Case \"<< tc << \": \" << endl;",
		  "        // tc++;",
		  "    }",
		  "}",
		  "",
		  ""
		],
		"description": ""
	  }
}